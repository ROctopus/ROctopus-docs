/* api format version 0.1.0 */

/* client requests */

{
  "submit_job": {
    "meta": {
      "version": "Character of api version",
      "jobId":  "Generated unique string based on username and time + hash",
      "user": "Unique username",
      "numTasks": "Integer of the number of tasks in the job",
      "fileSize": "Numeric of the file size in bytes",
      "notify": "Character for now (none/email/something)",
      "requirements": {
        "memory": "Integer of estimated ram in MB",
        "cpuTime": "Integer of seconds",
        "packages": [
          { 
            "name": "Character of package name",
            "version": "Character of version",
            "repo": "CRAN"
          },
          { 
            "name": "Character of package name",
            "version": "Character of version",
            "repo": "CRAN"
          }
        ],
        "RVersion": "Character of R version",
        "cores": "Integer of core count, always 1 for now"
      }
    },
    "content": "buffer of zipped folder"
  },
  
  "request_status": {
    "version": "Character of api version",
    "user": "Unique username",
    "jobId": "Existing jobId"
  },
  
  "request_results": {
    "version": "Character of api version",
    "user": "Unique username",
    "jobId": "Existing jobId"
  }
}


/* Server responses */

{
  "return_status": {
    "version": "0.1.0",
    "progress": "Value between 0 and 1 where 1 == 100%",
    "status": {
      "waiting": "int of waiting tasks",
      "locked": "int of locked (running) tasks",
      "finished": "int of finished tasks"
    },
    "failures": "Object (dictionary/JSON) of key/val pairs where key = tasknumber and val = int of number of failed attempts"
  },
  "return_results": {
    "version": "0.1.0",
    "content": "base64 encoded .rocres file"
  },
  "err": {
    "-1": {
      "type": "generic",
      "msg": "",
      "description": "",
      "action": ""
    },
    "7": {
      "type": "queue",
      "msg": "Job already exists",
      "description": "Origin tried to add job that already exists in the database",
      "action": [ "nothing", "retry" ]
    },
    "8": {
      "type": "status",
      "msg": "User or jobId not found",
      "description": "Origin requested status on nonexisting job",
      "action": [ "nothing", "retry" ]
    }
  },
  "msg": {
    "4": {
      "type": "queue",
      "msg": "Job successfully queued",
      "description": "The job was processed and added to the queue",
      "action": "continue"
    }
  }
}
